memberSearchIndex = [{"p":"org.example.view","c":"MazeView","l":"addSolverResult(String, int, long)","u":"addSolverResult(java.lang.String,int,long)"},{"p":"org.example.controller","c":"MazeController","l":"animationIndex"},{"p":"org.example.model","c":"Cell","l":"Cell(int, int)","u":"%3Cinit%3E(int,int)"},{"p":"org.example.view","c":"CreadorMatriz","l":"CreadorMatriz()","u":"%3Cinit%3E()"},{"p":"org.example.controller","c":"MazeController","l":"currentPathCellsAnimation"},{"p":"org.example.controller","c":"MazeController","l":"currentVisitedCellsAnimation"},{"p":"org.example.view","c":"MazeView","l":"DEFAULT_CELL_COLOR"},{"p":"org.example.model","c":"SelectionMode","l":"END_CELL"},{"p":"org.example.view","c":"MazeView","l":"END_COLOR"},{"p":"org.example.model","c":"Cell","l":"equals(Object)","u":"equals(java.lang.Object)"},{"p":"org.example.solver","c":"MazeSolverRecursive","l":"findPath(Cell)","u":"findPath(org.example.model.Cell)"},{"p":"org.example.solver","c":"MazeSolverRecursiveComplet","l":"findPath(Cell)","u":"findPath(org.example.model.Cell)"},{"p":"org.example.view","c":"MazeView","l":"getCellPanels()"},{"p":"org.example.view","c":"MazeView","l":"getCellPanelsState()"},{"p":"org.example.model","c":"Cell","l":"getCol()"},{"p":"org.example.view","c":"MazeCellPanel","l":"getCol()"},{"p":"org.example.controller","c":"MazeController","l":"getEndCell()"},{"p":"org.example.model","c":"Maze","l":"getGrid()"},{"p":"org.example.controller","c":"MazeController","l":"getMaze()"},{"p":"org.example.model","c":"MazeResult","l":"getPath()"},{"p":"org.example.solver","c":"MazeSolverRecursive","l":"getPath()"},{"p":"org.example.solver","c":"MazeSolverRecursiveCompletBT","l":"getPath()"},{"p":"org.example.model","c":"MazeSolver","l":"getPath(boolean[][], Cell, Cell)","u":"getPath(boolean[][],org.example.model.Cell,org.example.model.Cell)"},{"p":"org.example.solver","c":"MazeSolverBFS","l":"getPath(boolean[][], Cell, Cell)","u":"getPath(boolean[][],org.example.model.Cell,org.example.model.Cell)"},{"p":"org.example.solver","c":"MazeSolverDFS","l":"getPath(boolean[][], Cell, Cell)","u":"getPath(boolean[][],org.example.model.Cell,org.example.model.Cell)"},{"p":"org.example.solver","c":"MazeSolverRecursive","l":"getPath(boolean[][], Cell, Cell)","u":"getPath(boolean[][],org.example.model.Cell,org.example.model.Cell)"},{"p":"org.example.solver","c":"MazeSolverRecursiveComplet","l":"getPath(boolean[][], Cell, Cell)","u":"getPath(boolean[][],org.example.model.Cell,org.example.model.Cell)"},{"p":"org.example.solver","c":"MazeSolverRecursiveCompletBT","l":"getPath(boolean[][], Cell, Cell)","u":"getPath(boolean[][],org.example.model.Cell,org.example.model.Cell)"},{"p":"org.example.model","c":"Cell","l":"getRow()"},{"p":"org.example.view","c":"MazeCellPanel","l":"getRow()"},{"p":"org.example.view","c":"MazeView","l":"getSelectedEndCell()"},{"p":"org.example.view","c":"MazeView","l":"getSelectedStartCell()"},{"p":"org.example.controller","c":"MazeController","l":"getStartCell()"},{"p":"org.example.model","c":"MazeResult","l":"getVisited()"},{"p":"org.example.solver","c":"MazeSolverRecursive","l":"getVisited()"},{"p":"org.example.model","c":"Cell","l":"hashCode()"},{"p":"org.example.controller","c":"MazeController","l":"initializeMazeGrid(int, int)","u":"initializeMazeGrid(int,int)"},{"p":"org.example.view","c":"MazeCellPanel","l":"isObstacle()"},{"p":"org.example","c":"Main","l":"Main()","u":"%3Cinit%3E()"},{"p":"org.example","c":"Main","l":"main(String[])","u":"main(java.lang.String[])"},{"p":"org.example.model","c":"Maze","l":"Maze(boolean[][])","u":"%3Cinit%3E(boolean[][])"},{"p":"org.example.view","c":"MazeCellPanel","l":"MazeCellPanel(int, int)","u":"%3Cinit%3E(int,int)"},{"p":"org.example.controller","c":"MazeController","l":"MazeController(MazeView, int, int)","u":"%3Cinit%3E(org.example.view.MazeView,int,int)"},{"p":"org.example.model","c":"MazeResult","l":"MazeResult(List<Cell>, Set<Cell>)","u":"%3Cinit%3E(java.util.List,java.util.Set)"},{"p":"org.example.solver","c":"MazeSolverBFS","l":"MazeSolverBFS()","u":"%3Cinit%3E()"},{"p":"org.example.solver","c":"MazeSolverDFS","l":"MazeSolverDFS()","u":"%3Cinit%3E()"},{"p":"org.example.solver","c":"MazeSolverRecursive","l":"MazeSolverRecursive()","u":"%3Cinit%3E()"},{"p":"org.example.solver","c":"MazeSolverRecursiveComplet","l":"MazeSolverRecursiveComplet()","u":"%3Cinit%3E()"},{"p":"org.example.solver","c":"MazeSolverRecursiveCompletBT","l":"MazeSolverRecursiveCompletBT()","u":"%3Cinit%3E()"},{"p":"org.example.view","c":"MazeView","l":"MazeView(int, int)","u":"%3Cinit%3E(int,int)"},{"p":"org.example.model","c":"SelectionMode","l":"NONE"},{"p":"org.example.model","c":"SelectionMode","l":"OBSTACLE_CELL"},{"p":"org.example.view","c":"MazeView","l":"PATH_COLOR"},{"p":"org.example.controller","c":"MazeController","l":"pathAnimationIndex"},{"p":"org.example.view","c":"PerformanceChartPanel","l":"PerformanceChartPanel(List<String>, List<Long>)","u":"%3Cinit%3E(java.util.List,java.util.List)"},{"p":"org.example.controller","c":"MazeController","l":"performSingleStep(String)","u":"performSingleStep(java.lang.String)"},{"p":"org.example.controller","c":"MazeController","l":"resetAnimationIndices()"},{"p":"org.example.controller","c":"MazeController","l":"resetMaze()"},{"p":"org.example.controller","c":"MazeController","l":"resetPathColorsInView()"},{"p":"org.example.view","c":"MazeView","l":"resetSelectedCells()"},{"p":"org.example.view","c":"ResultsView","l":"ResultsView()","u":"%3Cinit%3E()"},{"p":"org.example.view","c":"ResultsView","l":"saveResultsToCsv(List<String[]>)","u":"saveResultsToCsv(java.util.List)"},{"p":"org.example.model","c":"Cell","l":"setCol(int)"},{"p":"org.example.view","c":"MazeView","l":"setController(MazeController)","u":"setController(org.example.controller.MazeController)"},{"p":"org.example.controller","c":"MazeController","l":"setEndCell(Cell)","u":"setEndCell(org.example.model.Cell)"},{"p":"org.example.model","c":"Maze","l":"setGrid(boolean[][])"},{"p":"org.example.controller","c":"MazeController","l":"setMaze(Maze)","u":"setMaze(org.example.model.Maze)"},{"p":"org.example.view","c":"MazeCellPanel","l":"setObstacle(boolean)"},{"p":"org.example.model","c":"MazeResult","l":"setPath(List<Cell>)","u":"setPath(java.util.List)"},{"p":"org.example.solver","c":"MazeSolverRecursive","l":"setPath(List<Cell>)","u":"setPath(java.util.List)"},{"p":"org.example.solver","c":"MazeSolverRecursiveCompletBT","l":"setPath(List<Cell>)","u":"setPath(java.util.List)"},{"p":"org.example.model","c":"Cell","l":"setRow(int)"},{"p":"org.example.controller","c":"MazeController","l":"setStartCell(Cell)","u":"setStartCell(org.example.model.Cell)"},{"p":"org.example.model","c":"MazeResult","l":"setVisited(Set<Cell>)","u":"setVisited(java.util.Set)"},{"p":"org.example.solver","c":"MazeSolverRecursive","l":"setVisited(Set<Cell>)","u":"setVisited(java.util.Set)"},{"p":"org.example.controller","c":"MazeController","l":"showMessage(String, String, String)","u":"showMessage(java.lang.String,java.lang.String,java.lang.String)"},{"p":"org.example.view","c":"CreadorMatriz","l":"solicitarTamanioMatriz()"},{"p":"org.example.model","c":"SelectionMode","l":"START_CELL"},{"p":"org.example.view","c":"MazeView","l":"START_COLOR"},{"p":"org.example.controller","c":"MazeController","l":"startSolvingMaze(String)","u":"startSolvingMaze(java.lang.String)"},{"p":"org.example.controller","c":"MazeController","l":"stepAnimation()"},{"p":"org.example.controller","c":"MazeController","l":"stopAnimation()"},{"p":"org.example.controller","c":"MazeController","l":"syncViewToModelWalls()"},{"p":"org.example.model","c":"Cell","l":"toString()"},{"p":"org.example.model","c":"MazeResult","l":"toString()"},{"p":"org.example.view","c":"MazeView","l":"updateCell(int, int, Color)","u":"updateCell(int,int,java.awt.Color)"},{"p":"org.example.model","c":"SelectionMode","l":"valueOf(String)","u":"valueOf(java.lang.String)"},{"p":"org.example.model","c":"SelectionMode","l":"values()"},{"p":"org.example.view","c":"MazeView","l":"VISITED_COLOR"},{"p":"org.example.controller","c":"MazeController","l":"visitedIndex"},{"p":"org.example.view","c":"MazeView","l":"WALL_COLOR"}];updateSearchResults();